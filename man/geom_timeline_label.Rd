% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-timelinelabel.R
\name{geom_timeline_label}
\alias{geom_timeline_label}
\title{Timeline label ggplot2's geom}
\usage{
geom_timeline_label(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", show.legend = NA, inherit.aes = TRUE,
  n_max = 3, line_height = 2/3, fontsize = 3.88, angle = 45,
  na.rm = FALSE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link{aes}} or
\code{\link{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
   options:

   If \code{NULL}, the default, the data is inherited from the plot
   data as specified in the call to \code{\link{ggplot}}.

   A \code{data.frame}, or other object, will override the plot
   data. All objects will be fortified to produce a data frame. See
   \code{\link{fortify}} for which variables will be created.

   A \code{function} will be called with a single argument,
   the plot data. The return value must be a \code{data.frame.}, and
   will be used as the layer data.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}

\item{n_max}{Number of labels to be depicted by level.  If the aesthetic
\code{size} is specified, it will be used to show the observations with the
highest values.  When this aesthetic is omitted, it will display the last
observations.  Defaults to 3.}

\item{line_height}{Length (expressed as proportion of the available space) of
the vertical lines attached to the text labels.  Defaults to 2/3.}

\item{fontsize}{Size of the font. Defaults to 3.88.}

\item{angle}{Rotation of the label in degrees; it is counter clockwise.
Defaults to 45.}

\item{na.rm}{If `FALSE`, the default, missing values are removed with
a warning. If `TRUE`, missing values are silently removed.}

\item{...}{other arguments passed on to the layer function. These are
often aesthetics, used to set an aesthetic to a fixed value, like
`color = "red"` or `size = 3`. They may also be parameters
to the paired geom/stat.}
}
\description{
\code{geom_timeline_label} works together with \code{\link{geom_timeline}}
and shows the labels of the higher values for the aesthetic \code{size}
(e.g., the magnitude of a quake) or the last observations if this aesthetic
is omitted.
}
\section{Details}{

Parameter \code{line_height} should be used with care because as long as it
is lower than 1, it will not overlap with other observations.
}

\section{Warning}{

When the \code{size} aesthetic is supplied, it is important that there is at
least one non-missing value for each level in order to work correctly.
\strong{Otherwise, the timeline labels will not be displayed}.
}

\examples{
require(dplyr)
require(ggplot2)

# Before using the geom, we need to tidy the data up.
raw_data <- get_earthquake_data()
clean_data <- eq_clean_data(raw_data)
clean_data <- eq_location_clean(clean_data)

# Quakes in USA
clean_data \%>\%
  filter(COUNTRY == "USA",
         !is.na(EQ_PRIMARY),
         YEAR \%in\% 2000:2016) \%>\%
  ggplot(mapping = aes(x = DATE,
                       size = EQ_PRIMARY,
                       color = TOTAL_DEATHS / 1000,
                       label = LOCATION_NAME)
         ) +
  geom_timeline() +
  # We label the five biggest quakes in size.
  geom_timeline_label(n_max = 5,
                      line_height = 1 / 5) +
  labs(size  = "Richter scale value",
       color = "# deaths",
       y = "") +
  theme_timeline()

# Quakes in USA and China
clean_data \%>\%
  filter(COUNTRY \%in\% c("USA", "CHINA"),
         !is.na(EQ_PRIMARY),
         YEAR \%in\% 2000:2016) \%>\%
  ggplot(mapping = aes(x = DATE,
                       y = COUNTRY,
                       color = TOTAL_DEATHS / 1000,
                       label = LOCATION_NAME)
         ) +
  geom_timeline() +
  geom_timeline_label(mapping = aes(size = EQ_PRIMARY),
                                    n_max = 5,
                                    line_height = 1 / 10) +
  labs(color = "# deaths in thousands",
       y = "") +
  guides(size = FALSE) +
  theme_timeline()
}
